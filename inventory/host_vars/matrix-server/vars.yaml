matrix_domain: russianfedora.online
matrix_server_fqn_matrix: russianfedora.online

devture_traefik_config_certificatesResolvers_acme_email: admin@russianfedora.online

# secret key is now stored in vault
# matrix_synapse_macaroon_secret_key: SOME_RANDOM_STRING_WHICH_IS_IN_VAULT

# random postgres password is now stored in vault
#matrix_postgres_connection_password: SOME_RANDOM_STRING_WHICH_IS_IN_VAULT

# random redis password is stored in vault
# matrix_redis_connection_password: SOME_RANDOM_STRING_WHICH_IS_IN_VAULT

matrix_server_fqn_element: "chat.{{ matrix_server_fqn_matrix }}"

# coturn is a TURN server for voice/video calls
matrix_coturn_enabled: false

# enable matrix-bridge-mautrix-telegram
# TODO: set API and hash in vault and then enable it
matrix_mautrix_telegram_enabled: true

matrix_mautrix_telegram_configuration_extension_yaml:
  bridge:
    # Disable "user entered the chat" messages
    state_event_formats:
      join: ""
      leave: ""
      name_change: ""
    permissions:
      "@vrutkovs:{{ matrix_domain }}": "admin"
      "@tim:{{ matrix_domain }}": "admin"
      "@xvitaly:{{ matrix_domain }}": "admin"
      "@gasinvein:matrix.org": "full"
  metrics:
    enabled: true
    listen_port: 8000

# enable shared secrets for double puppeting
matrix_synapse_ext_password_provider_shared_secret_auth_enabled: true
#matrix_synapse_ext_password_provider_shared_secret_auth_shared_secret is in Vault

# enable integration manager
# TODO: create a domain for that
matrix_dimension_enabled: false

# enable registration
# TODO: disable once clients would start supporting SSO
matrix_synapse_enable_registration: false

# disable mxisd
matrix_ma1sd_enabled: false

# don't import initial data
run_postgres_import: false
run_postgres_import_sqlite_db: false

# Set postgres action vars to false by default
run_postgres_upgrade: false
run_postgres_synapse_janitor: false
run_postgres_vacuum: false
run_synapse_register_user: false
run_synapse_update_user_password: false
run_synapse_import_media_store: false
run_self_check: false
# run_stop: false

# Disable registration
matrix_client_element_registration_enabled: false

# Enable metrics
matrix_synapse_metrics_enabled: true
matrix_synapse_metrics_proxying_enabled: true
matrix_synapse_metrics_port: 9129
matrix_synapse_container_metrics_api_host_bind_port: "127.0.0.1:9129"

# Disable vars snapshotting - we're using git for that
devture_playbook_state_preserver_vars_preservation_enabled: false

# Update a list of domains to obtain certificates for
request_certs_for_additional_domains:
- "flatpak.{{ matrix_domain }}"
- "dl.{{ matrix_domain }}"
- "{{ matrix_server_fqn_grafana }}"

matrix_synapse_workers_enabled: true
redis_enabled: true
matrix_synapse_workers_preset: "specialized-workers"
devture_postgres_process_extra_arguments: [
  "-c 'max_connections=200'"
]
matrix_synapse_log_level: "INFO"

# Run prometheus and grafana to display metrics
prometheus_enabled: true
prometheus_node_exporter_enabled: true
grafana_enabled: true
grafana_anonymous_access: true
grafana_default_admin_user: admin
matrix_playbook_reverse_proxy_type: playbook-managed-traefik
